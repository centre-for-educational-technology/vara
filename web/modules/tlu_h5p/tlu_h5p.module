<?php

/**
 * Implements hook_simplesamlphp_auth_user_attributes().
 */
function tlu_h5p_simplesamlphp_auth_user_attributes(\Drupal\user\UserInterface $account, $attributes) {
  $updated = FALSE;
  $definitions = [
    'sn' => 'surname', // Surname
    'cn' => 'full_name', // Full name
    'givenName' => 'given_name', // First name
    'displayname' => 'display_name', //Display name (full name)
  ];
  $service = \Drupal::service('user.data');

  foreach ($definitions as $key => $field) {
    if (isset($attributes[$key]) && $attributes[$key]) {
      $service->set('tlu_h5p', $account->id(), $field, $attributes[$key][0]);
      $updated = TRUE;
    }
  }

  if (isset($attributes['preferredLanguage'])) {
    $language = $attributes['preferredLanguage'][0];
    $languages = \Drupal::languageManager()->getLanguages();

    if (array_key_exists($language, $languages)) {
      $account->set('langcode', $language);
      $account->set('preferred_langcode', $language);
      $updated = TRUE;
    }
  }

  if ($updated) {
    return $account;
  }

  return FALSE;
}

/**
 * Implements hook_user_format_name_alter().
 */
function tlu_h5p_user_format_name_alter(&$name, \Drupal\Core\Session\AccountInterface $account) {
  $full_name = \Drupal::service('user.data')->get('tlu_h5p', $account->id(), 'full_name');

  if ($full_name) {
    $name = $full_name;
  } else {
    $display_name = \Drupal::service('user.data')->get('tlu_h5p', $account->id(), 'display_name');

    if ($display_name) {
      $name = $display_name;
    }
  }
}

/**
 * Implements hook_preprocess_menu().
 */
function tlu_h5p_preprocess_menu(&$variables) {
  if (\Drupal::currentUser()->isAnonymous()) {
    if (isset($variables['menu_name']) && $variables['menu_name'] === 'account') {
      if (isset($variables['items']['user.logout'])) {
        unset($variables['items']['user.logout']);
      }
    }
  }

  if (\Drupal::currentUser()->isAuthenticated()) {
    if (isset($variables['menu_name']) && $variables['menu_name'] === 'account') {
      if (isset($variables['items']['simplesamlphp_auth.saml_login'])) {
        unset($variables['items']['simplesamlphp_auth.saml_login']);
      }
    }
  }
}

/**
 * Implements hook_taxonomy_term_view().
 */
function tlu_h5p_taxonomy_term_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode === 'filter') {
    if (isset($build['name'])) {
      unset($build['name']);
    }
    if (isset($build['description'])) {
      unset($build['description']);
    }

    $build['filter_by_plain_text'] = [
      '#plain_text' => t('Materials for tag: @tag', [
        '@tag' => $entity->getName(),
      ]),
      '#prefix' => '<strong>',
      '#suffix' => '</strong>',
    ];
  }
}

/**
 * Checks if Editor role is set and shows a warning message if unit value is is empty.
 * Should only be present for users with administrative privileges.
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function _tlu_h5p_user_form_callback(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if (isset($form['field_unit'])) {
    $values = $form_state->getValues();

    if ($values['roles'] && in_array('editor', $values['roles']) && empty($values['field_unit'])) {
      \Drupal::messenger()->addWarning(t('User account has Editor role without Unit value present. Please note that it will only have any effect when unit value is present.'));
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tlu_h5p_form_user_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $account = \Drupal::currentUser();

  // Remove unit field from user edit from unless current user has "administer users" permission
  if (isset($form['field_unit']) && !$account->hasPermission('administer users')) {
    $form['field_unit']['#access'] = FALSE;
  }

  if (isset($form['field_unit']) && $account->hasPermission('administer users')) {
    $form['actions']['submit']['#submit'][] = '_tlu_h5p_user_form_callback';
  }
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function tlu_h5p_node_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
  $user = \Drupal\user\Entity\User::load($account->id());

  // Editor with matching unit is allowed to edit and delete materials
  if ($entity->bundle() === 'material' && $user->hasRole('editor') && $user->hasField('field_unit')) {
    $unit = $user->get('field_unit')->value;

    if ($unit && $entity->hasField('field_unit') && $entity->get('field_unit')->value === $unit) {
      return \Drupal\Core\Access\AccessResult::allowed();
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tlu_h5p_form_node_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Disable revisions for materials
  if ($form_id === 'node_material_edit_form') {
    $form['revision_information']['#access'] = FALSE;
  }

  // Allow all users to change material publishing status
  if ($form_id === 'node_material_form' || $form_id === 'node_material_edit_form') {
    $form['status']['#access'] = TRUE;
  }
}
